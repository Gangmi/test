package 반복문연습;

public class while_연습문제3_구글입사문제 {

	public static void main(String[] args) {
		/*
		 * * 문제 : 8의 숫자 세기(구글입사문제)
		 *
		 * 1부터 10,000까지 8이라는 숫자가 총 몇번 나오는가? 8이 포함되어 있는 숫자의 갯수를 카운팅 하는 것이 아니라 8이라는 숫자를 모두
		 * 카운팅 해야 한다. (※ 예를들어 8808은 3, 8888은 4로 카운팅 해야 합니다) 결과 : 4000
		 * ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
		 * 풀이
		 * 8이들어가는지를 판단하려면 -> 10으로 나눈다.
		 * 88 -> 나머지 8 몫 8 몫이 0이 될때까지 나눠. 10으로
		 * 888 -> 나머지 8 몫 88
		 * 8088-> 나머지 8 몫808 80 8 
		 * 
		 */
//		int count = 0;
//		for (int i = 1; i <= 10000; i++) {
//			int su = i;
//
//			while (su != 0) {
//				if (su > 0 && i % 10 == 8) {
//					++count;
//
//				}
//					su /= 10;
//
//				}
//
//			}
//			System.out.println(count);
	
		int add8 = 0;

		for (int i = 1; i <= 10000; i++) { // i를10000까지 돌리는 코드
			int su = i;
			while (su != 0) { // 같지 않을 때 참 - > for을 반복하는 동안 나오는 i를 su에 따로 저장 해 주고 이 su 를 가지고 그 들어온 i 값이
								// 정해진 조건 8을 포함하는지를 판단하는 while 반복문을 만든다.

				if (su > 0 && i % 10 == 8) { // su의 값이 0보다 크고 su 를 10으로 나눴을 때 나머지가 8이 나온다면 => 8이든 18이든 88이든 888이든
												// 1888이든 10으로 나누면
												// 값이 8이 된다. 그값이 나오면 add 8에 카운팅을 하는 의미로 1을 더해주고
					++add8;
				}
				su /= 10; // if를 실행 한 다음에는 원래 while 반복문안에 있는 su/=10; 을 실행한다. 이 코드를 통해서 10이 넘는 수 더라도
							// 10으로 나눈 값의 몫을 su 에 대입시키기 때문에 su가 0이 될 때 까지 이 while 반복문을 실행한다.
							// 그 과정에서 숫자가 증가 함에 따라 모든 수가 if 라는 8이 들어가는지 보는 조건문에 들어가기 때문에
							// 이 프로그램은 정상적으로 1 -10000 까지의 숫자중 8이 들어가는 모든 숫자가 몇인지 나오게 된다.

			}

		}
		System.out.println(add8);

	}

}
	
	


